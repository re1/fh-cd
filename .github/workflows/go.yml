name: Go

on: [push]

jobs:
  build:
    name: Build and test the application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Install dependencies
        run: go get .

      - name: Build
        run: go build -v ./...

      - name: Test with the Go CLI
        run: go test
        env:
          APP_DB_USERNAME: postgres
          APP_DB_PASSWORD: postgres
          APP_DB_NAME: postgres

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

  sonar:
    name: Scan for code quality using SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  hub:
    needs: build
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: re1coy/fh-cd
          tags: type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trivy-docker:
    needs: hub
    name: "Scan for docker vulnerabilities using Trivy"
    runs-on: ubuntu-latest

    steps:
      - name: Run Trivy vulnerability scanner for in docker mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "re1coy/fh-cd:sha-${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          skip-dirs: "/go"
          vuln-type: "os,library"
          severity: "CRITICAL"

  trivy-repo:
    name: "Scan for code vulnerabilities using Trivy"
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
